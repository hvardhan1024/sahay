<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="/socket.io/socket.io.js"></script>
  <link rel="manifest" href="/manifest.json">
  <meta name="theme-color" content="#10b981">
  <style>
    .message-container {
      scroll-behavior: smooth;
    }
    .typing-indicator {
      animation: pulse 1.5s ease-in-out infinite;
    }
    @keyframes pulse {
      0%, 100% { opacity: 1; }
      50% { opacity: 0.5; }
    }
  </style>
</head>
<body class="min-h-screen bg-gray-50">
  <%- include('../partials/navbar') %>
  
  <div class="flex h-screen pt-16">
    <!-- Chat Sidebar -->
    <div class="w-80 bg-white shadow-sm border-r border-gray-200 flex flex-col">
      <!-- Chat Header -->
      <div class="p-6 border-b border-gray-200">
        <h2 class="text-xl font-bold text-gray-800 mb-2">Group Chat</h2>
        <p class="text-sm text-gray-600">Connect with your peers in a safe space</p>
        <div class="flex items-center mt-4 space-x-2">
          <div class="w-3 h-3 bg-green-400 rounded-full"></div>
          <span class="text-sm text-gray-600" id="online-count">0 online</span>
        </div>
      </div>

      <!-- Chat Guidelines -->
      <div class="p-4 bg-blue-50 border-b border-blue-200">
        <h3 class="font-semibold text-blue-800 mb-2">Chat Guidelines</h3>
        <ul class="text-xs text-blue-700 space-y-1">
          <li>• Be respectful and supportive</li>
          <li>• No personal information sharing</li>
          <li>• Report inappropriate behavior</li>
          <li>• This is a safe space for everyone</li>
        </ul>
      </div>

      <!-- Quick Actions -->
      <div class="p-4 space-y-2">
        <button class="w-full text-left px-3 py-2 text-sm text-gray-600 hover:bg-gray-100 rounded-lg transition-colors">
          💬 General Discussion
        </button>
        <button class="w-full text-left px-3 py-2 text-sm text-gray-600 hover:bg-gray-100 rounded-lg transition-colors">
          📚 Study Support
        </button>
        <button class="w-full text-left px-3 py-2 text-sm text-gray-600 hover:bg-gray-100 rounded-lg transition-colors">
          🧘 Mindfulness Corner
        </button>
        <button class="w-full text-left px-3 py-2 text-sm text-gray-600 hover:bg-gray-100 rounded-lg transition-colors">
          🎯 Goal Setting
        </button>
      </div>
    </div>

    <!-- Chat Main Area -->
    <div class="flex-1 flex flex-col">
      <!-- Messages Container -->
      <div id="messages-container" class="flex-1 p-6 overflow-y-auto message-container">
        <div id="messages" class="space-y-4">
          <!-- Messages will be loaded here -->
        </div>
        
        <!-- Typing Indicator -->
        <div id="typing-indicator" class="hidden mt-4">
          <div class="flex items-center space-x-2 text-gray-500 text-sm typing-indicator">
            <div class="w-2 h-2 bg-gray-400 rounded-full"></div>
            <div class="w-2 h-2 bg-gray-400 rounded-full"></div>
            <div class="w-2 h-2 bg-gray-400 rounded-full"></div>
            <span>Someone is typing...</span>
          </div>
        </div>
      </div>

      <!-- Message Input -->
      <div class="border-t border-gray-200 p-6 bg-white">
        <form id="message-form" class="flex space-x-4">
          <div class="flex-1 relative">
            <input
              type="text"
              id="message-input"
              placeholder="Type your message... (Be kind and supportive)"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent pr-20"
              maxlength="1000"
              required
            >
            <div class="absolute right-3 top-3 text-xs text-gray-400">
              <span id="char-count">0</span>/1000
            </div>
          </div>
          <button
            type="submit"
            class="bg-green-500 text-white px-6 py-3 rounded-lg hover:bg-green-600 focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transition-colors font-medium"
          >
            Send
          </button>
        </form>
        
        <!-- Emoji Panel -->
        <div class="flex items-center space-x-2 mt-3">
          <span class="text-sm text-gray-500">Quick reactions:</span>
          <button class="text-lg hover:scale-110 transition-transform" onclick="addEmoji('👍')">👍</button>
          <button class="text-lg hover:scale-110 transition-transform" onclick="addEmoji('❤️')">❤️</button>
          <button class="text-lg hover:scale-110 transition-transform" onclick="addEmoji('🤗')">🤗</button>
          <button class="text-lg hover:scale-110 transition-transform" onclick="addEmoji('💪')">💪</button>
          <button class="text-lg hover:scale-110 transition-transform" onclick="addEmoji('🌟')">🌟</button>
          <button class="text-lg hover:scale-110 transition-transform" onclick="addEmoji('🙏')">🙏</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Crisis Support Modal -->
  <div id="crisis-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
      <div class="bg-white rounded-xl max-w-md w-full p-6">
        <div class="flex items-center space-x-3 mb-4">
          <div class="w-8 h-8 bg-red-100 rounded-full flex items-center justify-center">
            <svg class="w-5 h-5 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.888-.833-2.598 0L3.196 16.5c-.77.833-.192 2.5 1.344 2.5z"></path>
            </svg>
          </div>
          <h3 class="text-lg font-semibold text-gray-800">Need Immediate Help?</h3>
        </div>
        <p class="text-gray-600 mb-6">
          If you're experiencing a mental health crisis, please reach out for professional help:
        </p>
        <div class="space-y-3">
          <a href="tel:988" class="flex items-center w-full p-3 bg-red-50 border border-red-200 rounded-lg hover:bg-red-100 transition-colors">
            <div class="w-8 h-8 bg-red-100 rounded-full flex items-center justify-center mr-3">
              <svg class="w-4 h-4 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
              </svg>
            </div>
            <div>
              <div class="font-medium text-red-800">Crisis Lifeline</div>
              <div class="text-sm text-red-600">Call 988</div>
            </div>
          </a>
          <a href="sms:741741" class="flex items-center w-full p-3 bg-blue-50 border border-blue-200 rounded-lg hover:bg-blue-100 transition-colors">
            <div class="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center mr-3">
              <svg class="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
              </svg>
            </div>
            <div>
              <div class="font-medium text-blue-800">Crisis Text Line</div>
              <div class="text-sm text-blue-600">Text HOME to 741741</div>
            </div>
          </a>
        </div>
        <button onclick="closeCrisisModal()" class="w-full mt-4 px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors">
          Close
        </button>
      </div>
    </div>
  </div>

  <script>
    const socket = io();
    const messagesContainer = document.getElementById('messages');
    const messageForm = document.getElementById('message-form');
    const messageInput = document.getElementById('message-input');
    const charCount = document.getElementById('char-count');
    const typingIndicator = document.getElementById('typing-indicator');

    let typingTimer;
    let isTyping = false;

    // Load messages when connected
    socket.on('load_messages', (messages) => {
      messagesContainer.innerHTML = '';
      messages.forEach(message => {
        displayMessage(message);
      });
      scrollToBottom();
    });

    // Display new messages
    socket.on('new_message', (message) => {
      displayMessage(message);
      scrollToBottom();
    });

    // Handle form submission
    messageForm.addEventListener('submit', (e) => {
      e.preventDefault();
      const content = messageInput.value.trim();
      
      if (content) {
        socket.emit('send_message', {
          content: content,
          userId: '<%= user.id %>'
        });
        messageInput.value = '';
        updateCharCount();
      }
    });

    // Character count
    messageInput.addEventListener('input', updateCharCount);
    
    function updateCharCount() {
      charCount.textContent = messageInput.value.length;
    }

    // Display message function
    function displayMessage(message) {
      const messageDiv = document.createElement('div');
      const isOwnMessage = message.user._id === '<%= user.id %>';
      const time = new Date(message.timestamp).toLocaleTimeString('en-US', { 
        hour: '2-digit', 
        minute: '2-digit' 
      });

      messageDiv.className = `flex ${isOwnMessage ? 'justify-end' : 'justify-start'} mb-4`;
      
      messageDiv.innerHTML = `
        <div class="max-w-xs lg:max-w-md ${isOwnMessage ? 'bg-green-500 text-white' : 'bg-white border border-gray-200'} rounded-lg px-4 py-3">
          ${!isOwnMessage ? `<div class="font-semibold text-sm ${isOwnMessage ? 'text-green-100' : 'text-gray-800'} mb-1">${message.user.name}</div>` : ''}
          <div class="text-sm">${escapeHtml(message.content)}</div>
          <div class="text-xs ${isOwnMessage ? 'text-green-100' : 'text-gray-500'} mt-1">${time}</div>
        </div>
      `;
      
      messagesContainer.appendChild(messageDiv);
    }

    // Scroll to bottom
    function scrollToBottom() {
      const container = document.getElementById('messages-container');
      container.scrollTop = container.scrollHeight;
    }

    // Escape HTML
    function escapeHtml(text) {
      const div = document.createElement('div');
      div.textContent = text;
      return div.innerHTML;
    }

    // Add emoji to input
    function addEmoji(emoji) {
      messageInput.value += emoji;
      messageInput.focus();
      updateCharCount();
    }

    // Crisis modal functions
    function showCrisisModal() {
      document.getElementById('crisis-modal').classList.remove('hidden');
    }

    function closeCrisisModal() {
      document.getElementById('crisis-modal').classList.add('hidden');
    }

    // Monitor for crisis keywords
    messageInput.addEventListener('input', function() {
      const crisisKeywords = ['suicide', 'kill myself', 'end it all', 'can\'t go on', 'want to die'];
      const text = this.value.toLowerCase();
      
      if (crisisKeywords.some(keyword => text.includes(keyword))) {
        showCrisisModal();
      }
    });

    // Auto-focus message input
    messageInput.focus();
  </script>
</body>
</html>